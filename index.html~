<html>
<head>
<script src = "j.js"></script>
<script src = "json.js"></script>
<script src = "util.js"></script>
<script src = "parse.js"></script>
<script src = "run.js"></script>
<script>

$(document).ready(function(){
    var code = parse($('drewby').html());
    
    $('body').append($.toJSON(code))
    //run(code)
})

</script>
</head>
<body>
    <drewby>
    take(you)(or)(me)
    </drewby>
    
    <todoby>
    (take)("that")(or)
    (take)"that"(or)
    "self""friend""yo"
    </todoby>
    
    todo: add unindented strings

    <drewby-works>
    (print (a))      
    (print "a" "b") 
     print("a" "b")
       print('what')
      (print func)(what)
      (print (concat "a" "b") for you (to (do to) (me)))
      (print "yo")
      
    </drewby-works>

    <drewby2>
    (t aa"abc some things are
    n"t like they ""seem""aa)
    
    (print (concat "a" "b") for you (to (do to) (me)))
    
    </drewby2>
    
    <other style = "display: none;">
     ((get this) you (are great 'yea'))
    (print "hello world")
    (print (concat "yo" ":dude"))
    (set a "ten")
    (comment too much recursion (print (get-scope)))
    
    (def (go-here a b) 
        (print a)
        (print "and")
        (print b) 
    )
    </other>
    
    <div style = "display: none;">
    (comment 
        (def (test a b c) 
         
            (print "shoudn't see this")
            (print2 b)
            (print2 (+ b c))
        )
        (test 1 3 6)
    )
    
    (comment
        functions
        hash
        list
        explicit scope
        dynamic
        run-time identifiers
        tail recursion/goto 
        lookups
    )
    </div>
    <pre>
    code is data.
    data and metadata.
    tail recursion optimization/goto
    everything a function.
    by val. by referecnce
    lazy evaluation vs eager.
    can implement call
    can implement lookup
    access memory
    data stuctures
    mutable/immutable
    closures,
    recursion
    </pre>
    
</body>
</html>
